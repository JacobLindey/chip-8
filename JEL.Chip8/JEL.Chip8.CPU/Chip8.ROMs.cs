namespace JEL.Chip8.CPU;

public partial class Chip8
{
    /// <summary>
    /// Memory from 0x000 to 0x1FF is reserved, so the ROM instructions must start at 0x200.
    /// </summary>
    private const ushort ProgramStartAddress = 0x200;

    private const ushort FontSetStartAddress = 0x50;
    private static uint FontSetSize => (uint) FontSet.Length;

    private static readonly byte[] FontSet =
    [
        0xF0, 0x90, 0x90, 0x90, 0xF0, //0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    ];

    /// <summary>
    /// Loads a ROM into program memory.
    /// </summary>
    /// <param name="filename">the ROM file to load</param>
    public void LoadROM(string filename)
    {
        using var readStream = File.OpenRead(filename);
        using var writeStream = new MemoryStream(Memory);
        writeStream.Seek(ProgramStartAddress, SeekOrigin.Begin);
        readStream.CopyTo(writeStream);
    }
}